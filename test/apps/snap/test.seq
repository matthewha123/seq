from sys import argv
from genomeindex import *
type K = Kmer[20]

def update(counts: dict[int,int], pos: int, max_pos: int, max_count: int):
    count = counts.get(pos, 0) + 1
    counts[pos] = count
    return (pos, count) if count > max_count else (max_pos, max_count)

def main(args: array[str]):
    index = GenomeIndex[K](args[0])
    step = K.len()

    for read in FASTQ(args[1]):
        counts = dict[int,int]()
        max_pos, max_count = 0, 0

        for i,kmer in enumerate(read.kmers[K](step)):
            offset = i * step
            hits = index[kmer]
            hits_rev = index[~kmer]

            for i in range(len(hits)):
                pos = int(hits[i]) - offset
                max_pos, max_count = update(counts, pos, max_pos, max_count)

            for i in range(len(hits_rev)):
                pos = int(hits_rev[i]) - offset
                max_pos, max_count = update(counts, pos, max_pos, max_count)

        print read, max_pos

if len(argv) > 0:
    main(argv)
